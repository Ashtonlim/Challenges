import os
import subprocess
import sys

# to clean up the database files created by IDA after the flags are obtained
def cleanUpFiles(fileName, folderPath):
	fileExtenList = [".id0", ".id1", ".id2", ".nam", ".til"]

	pathToFlagFolder = folderPath + "\\flags\\" + fileName

	# loop till all the flags are stored in the storage folder before clean up can occur
	while 1:
		try:
			# get a list of files in the folder and convert list to string
			files = str(os.listdir(pathToFlagFolder))
		except WindowsError as ex:
			# cause storage folder not created yet so can reach to folder so throwing exception
			continue

		# continue to loop till both flags are in the folder already before clean up database files later
		if "droppedTemp.jpg" in files and "part"  in files:
			break

	# delete left over database files created by IDA
	for fileExten in fileExtenList:
		# create the path to the files to delete
		# Additional note: IDA just append extension like ".id0" to ".exe", thus example: "a.exe.id0"
		# thus, no need to remove ".exe" extension
		flePath = '"' + folderPath + "\\" + fileName + fileExten +'"'
		os.system("del " + flePath)


# get files from the directory that are not folders and only ".exe" or FILE format
def getFiles(folderPath):
	return [file for file in os.listdir(folderPath) if os.path.isfile(folderPath + "\\" + file) and (".exe" in file[-4:] or "." not in file)]


# get the flags of the files in the folder
def getFlags(idaPath, folderPath):
	# append " to both ends of the path to IDA
	idaPath = '"' + idaPath + '"'
	scriptPath = "AutomateGetAssignment2Flag_IDA.py" if folderPath == "." else '"' + os.getcwd() + '\\AutomateGetAssignment2Flag_IDA.py"'
	# get files to get flags from
	files = getFiles(folderPath)

	print()
	# execute script on IDA for each file to get the flags and clean up database files created by IDA afterwards
	for file in files:
		fullFilePath = '"' + folderPath + '\\' + file + '"'
		# execute get flag script on each file using IDA
		print("Running on: " + file + " ...")
		subprocess.call(idaPath + " -A -S" + scriptPath + " " + fullFilePath)
		# clean up 
		cleanUpFiles(file, folderPath)
		print("Completed")

	print("All Files Completed! Flags are in the 'flags' folder.")

# get path of IDA as well as the paht to the folder to the files to extract the flags from
def getPath():
	# user not inputting arguments. Print tool usage
	if len(sys.argv) == 1:
		# print tool usage
		printHelp()
		exit(0)
	# when there is only one commandline argument
	elif len(sys.argv) == 2:
		# check if user is requesting for help
		if sys.argv[1] == "-h" or sys.argv[1] == "-help":
			# print tool usage
			printHelp()
			exit(0)

		# IDA executable file path taken from 1st command line argument
		idaPath = sys.argv[1]
		# check if is a valid path to the executable file of IDA
		if not os.path.isfile(idaPath):
			print("Please input a valid IDA executable path.")
			exit(1)

		# current directory if user didn't set path from commandline argument
		folderPath = "."
	else:
		# IDA executable file path taken from 1st command line argument
		idaPath = sys.argv[1]
		# check if is a valid path to the executable file of IDA
		if not os.path.isfile(idaPath):
			print("Please input a valid IDA executable path.")
			exit(1)

		# folder path is taken from what user defined in the 2nd command line argument
		folderPath = sys.argv[2]

		if not os.path.isdir(folderPath):
			print("Please input a valid folder path.")
			exit(1)

	return idaPath, folderPath


# print this tool's usage
def printHelp():
	print("\n[Usage example]")
	print("Files in current directory: python GetAllFlags.py <path of IDA>")
	print('Example: python GetAllFlags.py "C:\\Program Files\\IDA Educational 7.4\\ida64.exe"\n')

	print("Files in other location: python GetAllFlags.py <path of IDA> <path to folder with files to extract>")
	print('Example: python GetAllFlags.py "C:\\Program Files\\IDA Educational 7.4\\ida64.exe" "C:\\Users\\users\\Documents"')


idaPath, folderPath = getPath()
getFlags(idaPath, folderPath)